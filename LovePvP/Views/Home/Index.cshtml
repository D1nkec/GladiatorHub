@using GladiatorHub.Models

@model List<PlayableClass>

@{
    ViewData["Title"] = "Home Page";
}

<h1 class="text-center">Search for a Player</h1>

<div class="search-container">
    <form method="get" asp-controller="Player" asp-action="PvpSummary">
        <div class="form-group">
            <label for="characterName" class="form-label">Character Name</label>
            <input type="text" class="form-control search-input" id="characterName" name="characterName" placeholder="Enter character name" required />
        </div>

        <div class="form-group">
            <label for="realmSlug" class="form-label">Realm Name</label>
            <input type="text" class="form-control search-input" id="realmSlug" name="realmSlug" placeholder="Enter realm name" required />
        </div>

        <button type="submit" class="btn btn-primary search-button">Search</button>
    </form>
</div>

<hr />

<h2 class="text-center">World of Warcraft Classes</h2>

<div class="class-icons">
    @foreach (var playableClass in Model)
    {
        <div class="class-item" onclick="toggleSpecializations(@playableClass.Id)">
            <img src="@playableClass.IconUrl" class="class-icon" />
            <p>@playableClass.Name</p>

            <!-- Display specializations for this class when clicked -->
            <div id="specializations-@playableClass.Id" class="specializations" style="display: none;">
                @if (ViewBag.ClassSpecializations != null && ViewBag.ClassSpecializations.ContainsKey(playableClass.Id))
                {
                    var specializations = ViewBag.ClassSpecializations[playableClass.Id];
                    foreach (var specialization in specializations)
                    {
                        <div class="specialization-item">
                            <!-- Link specialization to its leaderboard page -->
                            <a href="@Url.Action("SoloShuffle", "Leaderboards", new { spec = specialization.Name.ToLower().Replace(" ", "-") })">
                                <img src="@specialization.IconUrl" class="specialization-icon" />
                                <p>@specialization.Name</p>
                            </a>
                        </div>
                    }
                }
            </div> <!-- Closing div for specializations -->
        </div> <!-- Closing div for class-item -->
    }
</div>

<script>
    function toggleSpecializations(classId) {
        var specializationsDiv = document.getElementById('specializations-' + classId);
        specializationsDiv.style.display = specializationsDiv.style.display === 'none' ? 'block' : 'none';
    }
</script>
