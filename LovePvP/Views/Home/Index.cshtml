@using GladiatorHub.Models

@model List<PlayableClass>

@{
    ViewData["Title"] = "Home Page";
}

<div class="container mt-4">
    <!-- Search Form -->
    <h1 class="text-center">Search for a Player</h1>
    <div class="search-container mb-5">
        <form method="get" asp-controller="Player" asp-action="PvpSummary" class="needs-validation" novalidate>
            <div class="mb-3">
                <label for="characterName" class="form-label">Character Name</label>
                <input type="text" class="form-control" id="characterName" name="characterName" placeholder="Enter character name" required />
            </div>
            <div class="mb-3">
                <label for="realmSlug" class="form-label">Realm Name</label>
                <input type="text" class="form-control" id="realmSlug" name="realmSlug" placeholder="Enter realm name" required />
            </div>
            <button type="submit" class="btn btn-primary w-100">Search</button>
        </form>
    </div>

    <hr />

    <!-- Class Icons -->
    <h2 class="text-center">World of Warcraft Classes</h2>
    <div class="row mt-4">
        @foreach (var playableClass in Model)
        {
            <div class="col-md-3 col-sm-6 text-center class-item mb-4" onclick="toggleSpecializations(@playableClass.Id)">
                <div class="card shadow">
                    <img src="@playableClass.IconUrl" alt="@playableClass.Name Icon" class="card-img-top class-icon" />
                   
                </div>

                <!-- Specializations for this class -->
                <div id="specializations-@playableClass.Id" class="specializations mt-3" style="display: none;">
                    @if (ViewBag.ClassSpecializations != null && ViewBag.ClassSpecializations.ContainsKey(playableClass.Id))
                    {
                        var specializations = ViewBag.ClassSpecializations[playableClass.Id];
                        foreach (var specialization in specializations)
                        {
                            <div class="specialization-item mb-2">
                                <a href="@Url.Action("SoloShuffle", "Leaderboards", new {klasa = playableClass.Name.ToLower().Replace(" ", ""), spec = specialization.Name.ToLower().Replace(" ","") })" class="text-decoration-none">
                                    <img src="@specialization.IconUrl" alt="@specialization.Name Icon" class="specialization-icon" />
                                    <p>@specialization.Name</p>
                                </a>
                            </div>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>

<script>
    function toggleSpecializations(classId) {
        const specDiv = document.getElementById('specializations-' + classId);
        specDiv.style.display = specDiv.style.display === 'none' ? 'block' : 'none';
    }
</script>
